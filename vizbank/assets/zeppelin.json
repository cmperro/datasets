{"paragraphs":[{"text":"%md\n\n# Data Engineer Notebook\n\n## Description\nThis set of scripts read data from raw csv data and saves it to hive managed tables.\n\n## Execution Steps\n\n* Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table\n* Step 2: Read raw employee data and save to Hive managed table\n* Step 3: Read covid data and save to Hive managed table","user":"pvidal","dateUpdated":"2020-05-06T01:00:57+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h1>Data Engineer Notebook</h1>\n<h2>Description</h2>\n<p>This set of scripts read data from raw csv data and saves it to hive managed tables.</p>\n<h2>Execution Steps</h2>\n<ul>\n<li>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</li>\n<li>Step 2: Read raw employee data and save to Hive managed table</li>\n<li>Step 3: Read covid data and save to Hive managed table</li>\n</ul>\n"}]},"apps":[],"jobName":"paragraph_1588603849822_-505237664","id":"20200504-145049_208312522","dateCreated":"2020-05-04T14:50:49+0000","dateStarted":"2020-05-06T01:00:58+0000","dateFinished":"2020-05-06T01:00:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:192"},{"text":"%md\n### Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table","user":"pvidal","dateUpdated":"2020-05-06T11:36:52+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 1: Read raw location data, make sure that all locations have adresses and save to Hive managed table</h3>\n"}]},"apps":[],"jobName":"paragraph_1588604230496_-86688390","id":"20200504-145710_1004098376","dateCreated":"2020-05-04T14:57:10+0000","dateStarted":"2020-05-06T11:36:52+0000","dateFinished":"2020-05-06T11:36:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:193"},{"text":"// Read raw location data\nval locationDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://viz-cdp-bucket/raw/locations.csv\")\nlocationDf.printSchema()","user":"pvidal","dateUpdated":"2020-05-06T01:00:59+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"locationDf: org.apache.spark.sql.DataFrame = [LOCATION_ID: int, ADDRESS: string ... 29 more fields]\nroot\n |-- LOCATION_ID: integer (nullable = true)\n |-- ADDRESS: string (nullable = true)\n |-- BKCLASS: string (nullable = true)\n |-- CBSA: string (nullable = true)\n |-- CBSA_DIV: string (nullable = true)\n |-- CBSA_DIV_FLG: integer (nullable = true)\n |-- CBSA_DIV_NO: integer (nullable = true)\n |-- CBSA_METRO: integer (nullable = true)\n |-- CBSA_METRO_FLG: integer (nullable = true)\n |-- CBSA_METRO_NAME: string (nullable = true)\n |-- CBSA_MICRO_FLG: integer (nullable = true)\n |-- CBSA_NO: integer (nullable = true)\n |-- CERT: integer (nullable = true)\n |-- CITY: string (nullable = true)\n |-- COUNTY: string (nullable = true)\n |-- CSA: string (nullable = true)\n |-- CSA_FLG: integer (nullable = true)\n |-- CSA_NO: integer (nullable = true)\n |-- ESTYMD: string (nullable = true)\n |-- FI_UNINUM: integer (nullable = true)\n |-- MAINOFF: integer (nullable = true)\n |-- NAME: string (nullable = true)\n |-- OFFNAME: string (nullable = true)\n |-- OFFNUM: integer (nullable = true)\n |-- RUNDATE: string (nullable = true)\n |-- SERVTYPE: integer (nullable = true)\n |-- STALP: string (nullable = true)\n |-- STCNTY: integer (nullable = true)\n |-- STNAME: string (nullable = true)\n |-- UNINUM: integer (nullable = true)\n |-- ZIP: integer (nullable = true)"}]},"apps":[],"jobName":"paragraph_1588603278648_-1239611685","id":"20200504-144118_1021814178","dateCreated":"2020-05-04T14:41:18+0000","dateStarted":"2020-05-06T01:01:00+0000","dateFinished":"2020-05-06T01:01:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:194"},{"text":"// Make sure that all locations have adresses\nlocationDf.createOrReplaceTempView(\"location\")\n\nval allLocations = spark.sql(\"SELECT count(*) FROM location\")\n\nallLocations.show()","user":"pvidal","dateUpdated":"2020-05-06T01:01:45+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"allLocations: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2366|\n+--------+"}]},"apps":[],"jobName":"paragraph_1588603542789_551685168","id":"20200504-144542_365748041","dateCreated":"2020-05-04T14:45:42+0000","dateStarted":"2020-05-06T01:01:47+0000","dateFinished":"2020-05-06T01:01:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:195"},{"text":"val allLocationsWithAddress = spark.sql(\"SELECT count(*) FROM location where ADDRESS is not null\")\n\nallLocationsWithAddress.show()","user":"pvidal","dateUpdated":"2020-05-06T01:01:51+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"allLocationsWithAddress: org.apache.spark.sql.DataFrame = [count(1): bigint]\n+--------+\n|count(1)|\n+--------+\n|    2366|\n+--------+"}]},"apps":[],"jobName":"paragraph_1588604304691_-1256049984","id":"20200504-145824_988488816","dateCreated":"2020-05-04T14:58:24+0000","dateStarted":"2020-05-06T01:01:52+0000","dateFinished":"2020-05-06T01:01:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:196"},{"text":"// Save to hive managed table\n\nimport com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\nhive.showDatabases().show()","user":"pvidal","dateUpdated":"2020-05-06T01:01:53+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nhive: com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl = com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl@24fae813\n+------------------+\n|     database_name|\n+------------------+\n|           default|\n|information_schema|\n|               sys|\n+------------------+"}]},"apps":[],"jobName":"paragraph_1588604466020_1962721059","id":"20200504-150106_1157423807","dateCreated":"2020-05-04T15:01:06+0000","dateStarted":"2020-05-06T01:01:54+0000","dateFinished":"2020-05-06T01:01:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:197"},{"text":"hive.executeUpdate(\"CREATE DATABASE worldwidebank\");\nhive.setDatabase(\"worldwidebank\");\nlocationDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"locations\").save()","user":"pvidal","dateUpdated":"2020-05-06T01:02:00+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res13: Boolean = true"}]},"apps":[],"jobName":"paragraph_1588725189457_-498576753","id":"20200506-003309_39288531","dateCreated":"2020-05-06T00:33:09+0000","dateStarted":"2020-05-06T01:02:01+0000","dateFinished":"2020-05-06T01:02:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:199"},{"text":"val ds = hive.sql(\"select * from locations limit 10\")\nds.show()","user":"pvidal","dateUpdated":"2020-05-06T01:02:08+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ds: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [location_id: int, address: string ... 29 more fields]\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+\n|location_id|             address|bkclass|                cbsa|            cbsa_div|cbsa_div_flg|cbsa_div_no|cbsa_metro|cbsa_metro_flg|     cbsa_metro_name|cbsa_micro_flg|cbsa_no|cert|       city|   county|                 csa|csa_flg|csa_no| estymd|fi_uninum|mainoff|          name|             offname|offnum|rundate|servtype|stalp|stcnty|  stname|uninum|  zip|\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+\n|          1|8001 West Floriss...|      N|    St. Louis, MO-IL|                null|           0|       null|     41180|             1|    St. Louis, MO-IL|             0|  41180|6384|Saint Louis|St. Louis|St. Louis-St. Cha...|      1|   476|12/3/07|     4287|      0|Worldwide Bank|     JENNINGS BRANCH|  3569|4/24/20|      11|   MO| 29189|Missouri|470566|63136|\n|          2|240 South Pineapp...|      N|North Port-Saraso...|                null|           0|       null|     35840|             1|North Port-Saraso...|             0|  35840|6384|   Sarasota| Sarasota|North Port-Saraso...|      1|   412|1/15/08|     4287|      0|Worldwide Bank|NATIONAL CITY PCG...|  3645|4/24/20|      21|   FL| 12115| Florida|473422|34236|\n|          3|716 East Silver S...|      N|           Ocala, FL|                null|           0|       null|     36100|             1|           Ocala, FL|             0|  36100|6384|      Ocala|   Marion|                null|      0|  null|4/12/08|     4287|      0|Worldwide Bank|SILVER SPRINGS BO...|  4249|4/24/20|      11|   FL| 12083| Florida|474186|34470|\n|          4| 825 Plainfield Road|      N|Chicago-Napervill...|Chicago-Napervill...|           1|      16984|     16980|             1|Chicago-Napervill...|             0|  16980|6384|Willowbrook|   Dupage|Chicago-Napervill...|      1|   176| 1/7/08|     4287|      0|Worldwide Bank|  WILLOWBROOK BRANCH|  3648|4/24/20|      11|   IL| 17043|Illinois|475986|60527|\n|          5|  42 N. Union Street|      N|        Columbus, OH|                null|           0|       null|     18140|             1|        Columbus, OH|             0|  18140|6384|   Delaware| Delaware|Columbus-Marion-Z...|      1|   198| 7/1/07|     4287|      0|Worldwide Bank|DELAWARE-MAIN DU ...|  3669|4/24/20|      23|   OH| 39041|    Ohio|479745|43015|\n|          6|   802 Gallia Street|      N|      Portsmouth, OH|                null|           0|       null|         0|             0|                null|             1|  39020|6384| Portsmouth|   Scioto|Charleston-Huntin...|      1|   170| 7/1/07|     4287|      0|Worldwide Bank|PORTSMOUTH-MAIN D...|  3675|4/24/20|      23|   OH| 39145|    Ohio|479751|45662|\n|          7|3501 Roosevelt Bo...|      N|Birmingham-Hoover...|                null|           0|       null|     13820|             1|Birmingham-Hoover...|             0|  13820|6384| Birmingham|Jefferson|Birmingham-Hoover...|      1|   142|6/23/08|     4287|      0|Worldwide Bank|BIRMINGHAM-TRUSSV...|  4332|4/24/20|      11|   AL|  1073| Alabama|480915|35235|\n|          8|      2145 York Road|      N|Baltimore-Columbi...|                null|           0|       null|     12580|             1|Baltimore-Columbi...|             0|  12580|6384|   Timonium|Baltimore|Washington-Baltim...|      1|   548|2/25/09|     4287|      0|Worldwide Bank|TIMONIUM @ GIANT ...|  2079|4/24/20|      12|   MD| 24005|Maryland|493305|21093|\n|          9| 7200 Cradlerock Way|      N|Baltimore-Columbi...|                null|           0|       null|     12580|             1|Baltimore-Columbi...|             0|  12580|6384|   Columbia|   Howard|Washington-Baltim...|      1|   548|2/25/09|     4287|      0|Worldwide Bank|COLUMBIA @ GIANT ...|  2103|4/24/20|      12|   MD| 24027|Maryland|493329|21045|\n|         10|3530 Sugarloaf Pa...|      N|Washington-Arling...|Frederick-Gaither...|           1|      23224|     47900|             1|Washington-Arling...|             0|  47900|6384|  Frederick|Frederick|Washington-Baltim...|      1|   548| 4/1/09|     4287|      0|Worldwide Bank|URBANA @ GIANT BR...|  2107|4/24/20|      12|   MD| 24021|Maryland|493333|21704|\n+-----------+--------------------+-------+--------------------+--------------------+------------+-----------+----------+--------------+--------------------+--------------+-------+----+-----------+---------+--------------------+-------+------+-------+---------+-------+--------------+--------------------+------+-------+--------+-----+------+--------+------+-----+"}]},"apps":[],"jobName":"paragraph_1588726162284_-149553106","id":"20200506-004922_435064089","dateCreated":"2020-05-06T00:49:22+0000","dateStarted":"2020-05-06T01:02:09+0000","dateFinished":"2020-05-06T01:02:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:200"},{"user":"pvidal","dateUpdated":"2020-05-06T11:36:39+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588726536734_-1489223061","id":"20200506-005536_624379466","dateCreated":"2020-05-06T00:55:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:201","text":"%md\n### Step 2: Read raw employee data and save to Hive managed table","dateFinished":"2020-05-06T11:33:03+0000","dateStarted":"2020-05-06T11:33:03+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 2: Read raw employee data and save to Hive managed table</h3>\n"}]}},{"text":"val employeeDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://viz-cdp-bucket/raw/employee_data.csv\")","user":"pvidal","dateUpdated":"2020-05-06T11:35:44+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588764783228_2147014505","id":"20200506-113303_1528319006","dateCreated":"2020-05-06T11:33:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1058","dateFinished":"2020-05-06T11:36:24+0000","dateStarted":"2020-05-06T11:35:44+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<font color=\"red\">Previous livy session is expired, new livy session is created. Paragraphs that depend on this paragraph need to be re-executed!</font>"},{"type":"TEXT","data":"employeeDf: org.apache.spark.sql.DataFrame = [Number: int, location: int ... 31 more fields]"}]}},{"user":"pvidal","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588764944303_-1473430285","id":"20200506-113544_595223560","dateCreated":"2020-05-06T11:35:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1149","text":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\n\nhive.setDatabase(\"worldwidebank\");\nemployeeDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"employees\").save()","dateUpdated":"2020-05-06T11:36:34+0000","dateFinished":"2020-05-06T11:36:42+0000","dateStarted":"2020-05-06T11:36:34+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nhive: com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl = com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl@25d80575"}]}},{"user":"pvidal","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588764994102_483080664","id":"20200506-113634_1832908608","dateCreated":"2020-05-06T11:36:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1263","text":"%md\n### Step 3: Read covid data and save to Hive managed table","dateUpdated":"2020-05-06T11:37:04+0000","dateFinished":"2020-05-06T11:37:04+0000","dateStarted":"2020-05-06T11:37:04+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>Step 3: Read covid data and save to Hive managed table</h3>\n"}]}},{"text":"val covidDf = spark.read.options(Map(\"inferSchema\"->\"true\",\"delimiter\"->\",\",\"header\"->\"true\")).csv(\"s3a://viz-cdp-bucket/raw/covid_cases_04292020.csv\")\n\n","user":"pvidal","dateUpdated":"2020-05-06T11:38:43+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588765023638_-741152170","id":"20200506-113703_1246022963","dateCreated":"2020-05-06T11:37:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1399","dateFinished":"2020-05-06T11:38:45+0000","dateStarted":"2020-05-06T11:38:44+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"covidDf: org.apache.spark.sql.DataFrame = [FIPS: int, Admin2: string ... 10 more fields]"}]}},{"user":"pvidal","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588765109156_2041718624","id":"20200506-113829_488202919","dateCreated":"2020-05-06T11:38:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1486","text":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nval hive = HiveWarehouseSession.session(spark).build()\n\nhive.setDatabase(\"worldwidebank\");\ncovidDf.write.format(\"com.hortonworks.spark.sql.hive.llap.HiveWarehouseConnector\").option(\"table\", \"covid_cases\").save()","dateUpdated":"2020-05-06T11:38:58+0000","dateFinished":"2020-05-06T11:39:04+0000","dateStarted":"2020-05-06T11:38:58+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.hortonworks.hwc.HiveWarehouseSession\nimport com.hortonworks.hwc.HiveWarehouseSession._\nhive: com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl = com.hortonworks.spark.sql.hive.llap.HiveWarehouseSessionImpl@3a8b35c6"}]}},{"user":"pvidal","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1588765138273_649535201","id":"20200506-113858_1079907016","dateCreated":"2020-05-06T11:38:58+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1623"}],"name":"Generate Dataset","id":"2F9ZDD323","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"livy:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}